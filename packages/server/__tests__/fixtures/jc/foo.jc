type foo1 = number

type foo2 = boolean

type foo3 = null

type foo4 = string

type foo5 = [number]

type foo6 = {
  foo: number
}

type foo7 = (number, string)

type foo8 = <number>

type foo9 = any

type foo10 = none

type foo11 = number | string

type foo12 = {
  foo: string
} & {
  bar: number
}

type foo13 = "foo13"

type foo14 = 0

type foo15 = true

type foo16 = false

type foo = foo6

# bar
type bar = {
  bar: string
}

# foo and bar
type fooAndBar = foo & bar

# baz
type baz = {
  baz: boolean
}

# foo and baz
type fooAndBaz = foo & baz

# foo, bar and baz
type fooAndBarAndBaz = foo & bar & baz

derive int from number

derive Date from string

# some comments
call bazCall: fooAndBarAndBaz => baz
call barCall: fooAndBar => bar
call fooCall: fooAndBaz => foo
